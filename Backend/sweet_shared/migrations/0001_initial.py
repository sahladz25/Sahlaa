# Generated by Django 3.2.7 on 2024-05-31 10:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='bankinformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankname', models.CharField(blank=True, max_length=120, null=True)),
                ('nameandsurname', models.CharField(blank=True, max_length=120, null=True)),
                ('accountnumber', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('logobank', models.ImageField(upload_to='media/slider_imgs')),
            ],
        ),
        migrations.CreateModel(
            name='Confirmerlidentite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('nom', models.CharField(blank=True, max_length=120, null=True)),
                ('Prenom', models.CharField(blank=True, max_length=120, null=True)),
                ('imagecard', models.ImageField(upload_to='media/slider_imgs')),
                ('imageegister', models.ImageField(blank=True, null=True, upload_to='media/slider_imgs')),
                ('confirmer', models.CharField(blank=True, choices=[('FALSE', 'FALSE'), ('TRUE', 'TRUE')], default='FALSE', max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='confirmserial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('serial', models.CharField(blank=True, max_length=120, null=True)),
                ('confirmserial', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='domainn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domainee', models.CharField(max_length=200)),
                ('usernamee', models.CharField(blank=True, max_length=120, null=True)),
                ('confirmerdoman', models.CharField(blank=True, choices=[('FALSE', 'FALSE'), ('TRUE', 'TRUE')], default='FALSE', max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderpri', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SweetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=120)),
                ('password', models.CharField(max_length=120)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('domainname', models.CharField(max_length=120)),
                ('wilaya', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=120)),
                ('phonenumber', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Typesofsubscriptionplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planname', models.CharField(blank=True, max_length=120, null=True)),
                ('planprice', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage1', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage2', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage3', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage4', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage5', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage6', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage7', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage8', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage9', models.CharField(blank=True, max_length=120, null=True)),
                ('advantage10', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='wilayaa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wilaya', models.CharField(max_length=110)),
                ('prixdomicile', models.IntegerField()),
                ('prixstopdesk', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SituationColis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking', models.CharField(blank=True, max_length=120, null=True)),
                ('situations', models.ManyToManyField(to='sweet_shared.Situation')),
            ],
            options={
                'verbose_name_plural': 'حالات الشحن',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('numberoforders', models.IntegerField(default=1)),
                ('orderprice', models.CharField(blank=True, max_length=120, null=True)),
                ('image', models.ImageField(upload_to='media/slider_imgs')),
                ('demand', models.CharField(blank=True, choices=[('D', 'قيد المراجعة'), ('A', 'تاكيد')], default='D', max_length=1, null=True)),
                ('remainingprice', models.CharField(blank=True, max_length=120, null=True)),
                ('gift', models.CharField(blank=True, choices=[('D', ' no gift'), ('A', 'gift')], default='D', max_length=1, null=True)),
                ('paymenttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sweet_shared.bankinformation')),
            ],
        ),
        migrations.CreateModel(
            name='coliinformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomcomplet', models.CharField(blank=True, max_length=120, null=True)),
                ('mobile1', models.CharField(blank=True, max_length=12, null=True)),
                ('mobile2', models.CharField(blank=True, max_length=12, null=True)),
                ('adresse', models.CharField(blank=True, max_length=120, null=True)),
                ('commune', models.CharField(blank=True, max_length=120, null=True)),
                ('noteclient', models.CharField(blank=True, max_length=120, null=True)),
                ('numerodecommande', models.CharField(blank=True, max_length=120, null=True)),
                ('nameroduct', models.CharField(blank=True, max_length=120, null=True)),
                ('echange', models.CharField(choices=[('S', 'FALSE'), ('I', 'TRUE')], default='S', max_length=1)),
                ('livrioncoli', models.CharField(choices=[('DOMICEL', 'DOMICEL'), ('STOPDESK', 'STOPDESK')], default='DOMICEL', max_length=8)),
                ('prixproduct', models.IntegerField(blank=True, default=1, null=True)),
                ('prixretour', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking', models.CharField(blank=True, max_length=120, null=True)),
                ('Date', models.CharField(blank=True, max_length=120, null=True)),
                ('bureauactuel', models.CharField(blank=True, max_length=120, null=True)),
                ('numeroreclamation', models.CharField(blank=True, max_length=120, null=True)),
                ('situationcoli', models.CharField(blank=True, max_length=120, null=True)),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='pdfs/')),
                ('wilaya', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sweet_shared.wilayaa')),
            ],
        ),
        migrations.CreateModel(
            name='addpayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('numberpayments', models.IntegerField(default=300)),
                ('numbercemande', models.IntegerField(default=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
